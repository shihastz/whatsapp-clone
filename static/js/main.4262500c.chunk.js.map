{"version":3,"sources":["firebase.js","StateProvider.js","Chat.js","SidebarChat.js","Sidebar.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStatevalue","useContext","Chat","user","useState","input","setInput","seed","setSeed","roomId","useParams","roomName","setRoomName","messages","setMessages","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","className","length","Avatar","src","Date","timestamp","toDate","toUTCString","IconButton","message","displayName","id","type","onChange","e","target","placeholder","onClick","preventDefault","add","FieldValue","serverTimestamp","SidebarChat","addNewChat","prompt","alert","to","Sidebar","rooms","setRooms","photoURL","room","actionTypes","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","state","action","console","log","document","getElementById"],"mappings":"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","file":"static/js/main.4262500c.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAEfwGryAI5ahH-bZUSuJifF9DpSd3CLKE\",\r\n    authDomain: \"whatsapp-web-clone-2c2e0.firebaseapp.com\",\r\n    databaseURL: \"https://whatsapp-web-clone-2c2e0.firebaseio.com\",\r\n    projectId: \"whatsapp-web-clone-2c2e0\",\r\n    storageBucket: \"whatsapp-web-clone-2c2e0.appspot.com\",\r\n    messagingSenderId: \"1086092460615\",\r\n    appId: \"1:1086092460615:web:084c06f72cd938f4152762\",\r\n    measurementId: \"G-EK9QPCZDXY\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { auth, provider }\r\n  export default db;\r\n","import React, { createContext, useContext, useReducer} from 'react';\r\n\r\n//preparing the data layer\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\n//hooks which allow us to pull information\r\nexport const useStatevalue = () => useContext(StateContext);\r\n","import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Chat.css\";\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport { useStatevalue } from \"./StateProvider\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat() {\r\n  const [{ user }, dispatch] = useStatevalue();\r\n  const [input, setInput] = useState(\"\");\r\n  const [seed, setSeed] = useState();\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, [roomId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (input) {\r\n      db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n        name: user.displayName,\r\n        message: input,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n    }\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        {messages.length > 0 || roomName !== \"\" ? (\r\n          <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        ) : (\r\n          <div><h2 className=\"chat__default\">WhatsApp Web</h2>\r\n          <span className=\"chat__default_mobile\">Open in Desktop Mode</span></div>\r\n        )}\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n            {messages.length > 0 ? \"last seen \" : \"\"}\r\n            {messages.length > 0\r\n              ? new Date(\r\n                  messages[messages.length - 1]?.timestamp?.toDate()\r\n                ).toUTCString()\r\n              : \"\"}\r\n          </p>\r\n        </div>\r\n        <div className=\"chat__headerRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat__body\">\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`chat__message ${\r\n              message.name === user.displayName && \"chat__receiver\"\r\n            } `}\r\n            key={message.id}\r\n          >\r\n            <span className=\"chat__name\">{message.name}</span>\r\n            {message.message}\r\n            <span className=\"chat__timestamp\">\r\n              {new Date(message.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      {messages.length > 0 ? (\r\n        <div className=\"chat__footer\">\r\n          <InsertEmoticonIcon />\r\n          <form>\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              placeholder=\"Type a message\"\r\n            />\r\n            <button type=\"submit\" onClick={sendMessage}>\r\n              Send a message\r\n            </button>\r\n          </form>\r\n          <MicIcon />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import { Avatar } from '@material-ui/core'\r\nimport React, {useEffect, useState} from 'react'\r\nimport './SidebarChat.css'\r\nimport db from './firebase'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n    const [seed, setSeed] = useState(\"\")\r\n    const [messages, setMessages] = useState([])\r\n\r\n    useEffect(() => {\r\n       if(id){\r\n        // db.collection('rooms').doc(id).collection('messages').orderBy('timestamp', 'desc').onSnapshot((snapshot) =>\r\n        //      setMessages(snapshot.docs.map(doc => doc.data())))\r\n        \r\n             db.collection('rooms').doc(id).collection('messages').orderBy('timestamp', 'desc').onSnapshot((snapshot) =>\r\n             setMessages(snapshot.docs.map(doc => doc.data())))\r\n        \r\n       }\r\n       \r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n    }, [])\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter name for chat room\")\r\n        if(roomName){\r\n            db.collection('rooms').add({\r\n            name:roomName,\r\n        })\r\n        }else{\r\n            alert(\"No Name entered\")\r\n        }\r\n        \r\n    }\r\n    \r\n    return !addNewChat? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className=\"sidebarChat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"sidebarChat__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{messages.length>0 ?messages[0]?.message :''}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    ): (\r\n        <div className=\"sidebarChat\" onClick={createChat}>\r\n            <h2>Add New Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Avatar, IconButton } from \"@material-ui/core\"\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined'\r\nimport './Sidebar.css'\r\nimport SidebarChat from './SidebarChat'\r\nimport db from './firebase'\r\nimport { useStatevalue } from './StateProvider'\r\n\r\nfunction Sidebar() {\r\n    const [{ user }, dispatch] = useStatevalue()\r\n    const [rooms, setRooms] = useState([])\r\n\r\n    useEffect(() => {\r\n        db.collection('rooms').onSnapshot(snapshot => {\r\n            setRooms(snapshot.docs.map(doc => (\r\n                {\r\n                    id:doc.id,\r\n                    data:doc.data()\r\n                }\r\n            )))\r\n        })\r\n        return () =>{\r\n            //unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={user?.photoURL} />\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                 \r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined/>\r\n                    <input type=\"text\" placeholder=\"Search or start new chat\" />\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat />\r\n                {rooms.map(room => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export const initialState = {\r\n    user : null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : 'SET_USER',\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                user: action.user,\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport './Login.css'\r\nimport { auth, provider } from './firebase'\r\nimport { actionTypes } from './reducer'\r\nimport { useStatevalue } from './StateProvider'\r\n\r\nfunction Login() {\r\n    const [{}, dispatch] = useStatevalue()\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider).then((result) => {\r\n            dispatch({\r\n                type:actionTypes.SET_USER,\r\n                user: result.user\r\n            })\r\n        }).catch((error) => alert(error.message))\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://seeklogo.com/images/W/whatsapp-icon-logo-6E793ACECD-seeklogo.com.png\" alt=\"login\" />\r\n\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to Whatsapp</h1>\r\n                </div>\r\n                <Button onClick={signIn}>\r\n                    Sign  In With Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, {useState} from \"react\"\nimport './App.css';\nimport Chat from \"./Chat\";\nimport Sidebar from \"./Sidebar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStatevalue } from './StateProvider'\n\n\nfunction App() {\n  const [{ user }, dispatch] = useStatevalue()\n  return (\n      <div className=\"app\">\n        {!user ? (\n          <Login/>\n        ): (\n          <div className=\"app__body\">\n            <Router>\n            <Sidebar/>\n              <Switch>\n                <Route path=\"/rooms/:roomId\">\n                  <Chat/>\n                </Route>\n                <Route path=\"/\">\n                  <Chat/>\n                </Route>\n              </Switch>\n            </Router>\n            \n          </div>\n          \n        )}\n        <span className=\"made_by\">Made By Shihas</span>\n      </div> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {reducer, initialState} from \"./reducer\";\nimport { StateProvider } from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}